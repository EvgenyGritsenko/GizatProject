#include <vcl.h>
#pragma hdrstop

#include "Unit7.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm7 *Form7;

// Определение структуры вопроса
struct Question {
	String question;
	bool correctAnswer;  // true для "Да", false для "Нет"
};

// Инициализация списка вопросов
std::vector<Question> questions = {
	{"Функция sqrt() возвращает корень числа?", true},
	{"Функция strlen() возвращает тип int?", false},
	// Добавьте другие вопросы
};


// Функция для отображения текущего вопроса
void __fastcall TForm7::ShowQuestion(int index) {
	if (index < static_cast<int>(questions.size())) {  // Преобразуем размер в int для корректного сравнения
		Label1->Caption = questions[index].question;
		RadioGroup1->Items->Clear();
		RadioGroup1->Items->Add("Да");  // Добавляем вариант "Да"
		RadioGroup1->Items->Add("Нет");  // Добавляем вариант "Нет"
		RadioGroup1->ItemIndex = -1;  // Сброс выбора
	} else {
		// Используем явное приведение к int перед вызовом IntToStr
		ShowMessage("Тест завершен. Ваш результат: " + IntToStr(static_cast<int>(score)) + " из " + IntToStr(static_cast<int>(questions.size())));
		Close();  // Закрытие формы после завершения теста
	}
}

// Конструктор формы
__fastcall TForm7::TForm7(TComponent* Owner)
	: TForm(Owner)
{
}

// Обработчик нажатия на кнопку "Далее"
void __fastcall TForm7::Button1Click(TObject *Sender)
{
	if (RadioGroup1->ItemIndex != -1) {  // Проверяем, выбран ли какой-то ответ
		// Проверяем правильность ответа (0 - "Да", 1 - "Нет")
		if ((RadioGroup1->ItemIndex == 0 && questions[currentQuestionIndex].correctAnswer) ||
			(RadioGroup1->ItemIndex == 1 && !questions[currentQuestionIndex].correctAnswer)) {
			score++;
		}
		currentQuestionIndex++;
		ShowQuestion(currentQuestionIndex);
	} else {
		ShowMessage("Пожалуйста, выберите ответ.");  // Сообщение, если ответ не выбран
	}
}

// Обработчик события при показе формы
void __fastcall TForm7::FormShow(TObject *Sender)
{
	ShowQuestion(0);
}
//---------------------------------------------------------------------------
